--[[
    ██████╗ ███████╗ █████╗ ██╗     ████████╗██╗  ██╗
    ██╔══██╗██╔════╝██╔══██╗██║     ╚══██╔══╝██║  ██║
    ██████╔╝█████╗  ███████║██║        ██║   ███████║
    ██╔══██╗██╔══╝  ██╔══██║██║        ██║   ██╔══██║
    ██║  ██║███████╗██║  ██║███████╗   ██║   ██║  ██║
    ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝
    STEALTH RECOIL CONTROL v3.3 - NO CAP + RANDOM (G HUB COMPATIBLE)
--]]

-- ========================================
-- USER-EDITABLE SETTINGS
-- ========================================
EnableRCS = true
RecoilControlMode = "hi"            -- lo, me, hi, Custom
RcCustomStrength = 7                -- NO LIMIT – käytä varoen!
RequireToggle = true
ToggleKey = "CapsLock"

Humanize = true
RandomnessEnabled = true
RandomRange = 2
MicroPauseChance = 8
MicroPauseMax = 3

HorizontalRecoilEnabled = true
HorizontalRange = 2
HorizontalChance = 30
HorizontalStrengthVariation = 1
HorizontalSmoothing = true

EnableMouseEventSpoof = true
MovementCurve = "easeOut"
SmoothingSteps = 5

DelayMin = 8
DelayMax = 16

-- Recoil Settings

local BaseStrength = 0
if RecoilControlMode == "lo" then
    BaseStrength = math.random(1, 2)
elseif RecoilControlMode == "me" then
    BaseStrength = math.random(5, 6)
elseif RecoilControlMode == "hi" then
    BaseStrength = math.random(7, 8)
elseif RecoilControlMode == "Custom" then
    BaseStrength = RcCustomStrength  -- NO CAP
end

-- ========================================
-- ###   DO NOT EDIT BELOW THIS LINE!   ###
-- ========================================

math.randomseed(GetRunningTime())

if BaseStrength < 1 then BaseStrength = 1 end

EnablePrimaryMouseButtonEvents(true)

-- Easing functions
local function easeOut(t) return 1 - (1 - t) ^ 3 end
local function easeIn(t) return t ^ 2 end
local function sine(t) return 0.5 - 0.5 * math.cos(t * math.pi) end

-- Smooth mouse movement
local function MoveMouseSmooth(x, y, steps)
    if not EnableMouseEventSpoof then
        MoveMouseRelative(x, y)
        return
    end

    local curveFunc = MovementCurve == "easeIn" and easeIn or MovementCurve == "sine" and sine or easeOut
    if HorizontalSmoothing and math.abs(x) > 0 then steps = steps + 1 end

    local totalX, totalY = 0, 0
    for i = 1, steps do
        local t = i / steps
        local eased = curveFunc(t)
        local dx = math.floor(x * eased + 0.5)
        local dy = math.floor(y * eased + 0.5)
        totalX = totalX + dx
        totalY = totalY + dy
        if dx ~= 0 or dy ~= 0 then
            MoveMouseRelative(dx, dy)
            Sleep(1)
        end
    end
end

-- Main loop
function OnEvent(event, arg)
    if not EnableRCS or (RequireToggle and not IsKeyLockOn(ToggleKey)) or not IsMouseButtonPressed(3) then return end

    repeat
        if IsMouseButtonPressed(1) then
            repeat
                local vertStrength = BaseStrength
                local horizStrength = 0

                -- Vertical randomness
                if RandomnessEnabled and math.random(1, 100) <= 85 then
                    local offset = math.random(-RandomRange, RandomRange)
                    vertStrength = math.max(1, vertStrength + offset)
                end

                -- Horizontal
                if HorizontalRecoilEnabled and math.random(1, 100) <= HorizontalChance then
                    local baseHoriz = math.random(-HorizontalRange, HorizontalRange)
                    if baseHoriz ~= 0 then
                        local variation = math.random(-HorizontalStrengthVariation, HorizontalStrengthVariation)
                        horizStrength = baseHoriz + variation
                        if math.abs(horizStrength) < 1 then
                            horizStrength = horizStrength > 0 and 1 or -1
                        end
                    end
                end

                -- Micro-pause
                if MicroPauseChance > 0 and math.random(1, 100) <= MicroPauseChance then
                    Sleep(math.random(1, MicroPauseMax))
                end

                -- Movement
                if Humanize then
                    MoveMouseSmooth(horizStrength, vertStrength, SmoothingSteps)
                else
                    MoveMouseRelative(horizStrength, vertStrength)
                end

                -- Delay
                Sleep(math.random(DelayMin, DelayMax) + math.random(0, 2))

            until not IsMouseButtonPressed(1)
        end
        Sleep(1)
    until not IsMouseButtonPressed(3)
end
